# This is the slackrepo configuration file for the csb repository.
#
# The priority order for configuration is:
# (1) Environment variables when slackrepo is called
# (2) ~/.genreprc   [for gen_repos_files.sh only]
# (3) ~/.slackreporc
# (4) /etc/slackrepo/slackrepo_csb.conf
#
# %REPO%, %SLACKVER% and %ARCH% will be replaced by the repo ID, Slackware version and arch

#-------------------------------------------------------------------------------
# Filestore locations

# Where is the local SlackBuild repo:
SBREPO="/var/lib/slackrepo/%REPO%/slackbuilds"

# Where to store cached sources (you will need plenty of space):
SRCREPO="/var/lib/slackrepo/%REPO%/source"

# Where to store built packages (you will need plenty of space):
PKGREPO="/var/lib/slackrepo/%REPO%/packages/%SLACKVER%/%ARCH%"

# Where to keep backups (delete if you do not want backups):
PKGBACKUP="/var/lib/slackrepo/%REPO%/backups/%SLACKVER%/%ARCH%"

# Where to find hintfiles for this repo:
HINTDIR="/etc/slackrepo/%REPO%/hintfiles"

# Where to find queuefiles for this repo:
QUEUEDIR="/etc/slackrepo/%REPO%/queuefiles"

# Where to store log files:
LOGDIR="/var/log/slackrepo/%REPO%"

# Where to store temporary files (you will need plenty of space):
TMP="/tmp/%REPO%"

# Where to keep the database:
DATABASE="/var/lib/slackrepo/%REPO%/database_%REPO%.sqlite3"

#-------------------------------------------------------------------------------
# Build control variables

# Number of make jobs to set in MAKEFLAGS:
# specify it as (for example) '-j2'.
# Leave blank to have this automatically determined: -j$(( $(nproc) + 1 ))
NUMJOBS=''

# Arch for building.
# Leave blank to have this automatically determined by the build host:
ARCH=''

# Tag for built packages.
# If you are publishing these packages, *please* change csb to something else
TAG='_csb'

# Package compression type.
# Valid values are: tgz, txz, tbz, tlz
PKGTYPE='tgz'

#-------------------------------------------------------------------------------
# Variables for calling gen_repos_files.sh

# Change this to '1' if you want to enable gen_repos_files.sh
# If enabled, you *must* set correct values for all the variables below!
USE_GENREPOS='0'

# Don't change this! it is needed so gen_repos_files.sh can find your packages
REPOSROOT="$PKGREPO"

# Repository maintainer
REPOSOWNER="Local administrator <root@localhost>"

# The GPG key for the repository owner can contain a different string than
# the value of $REPOSOWNER . If you leave $REPOSOWNERGPG empty, the script will
# use the value you've set for $REPOSOWNER instead to search the GPG keyfile.
REPOSOWNERGPG=""

# Under what URL is the repository accessible:
# (this is just an example, you will need to setup the http server)
DL_URL="http://localhost/pkgrepo/%REPO%/%SLACKVER%/%ARCH%"

# The title of the generated RSS feed:
RSS_TITLE="Local SlackBuild Packages"

# The logo picture used for the RSS feed:
RSS_ICON="http://www.slackware.com/~alien/graphics/blueorb.png"

# The URL linked to when clicking on the logo:
RSS_LINK="file://$REPOSROOT/ChangeLog.txt"

# URL to the full changelog.txt:
RSS_CLURL="file://$REPOSROOT/ChangeLog.txt"

# The descriptive text for the RSS feed:
RSS_DESCRIPTION="Local SlackBuild Packages"

# Maximum number of RSS feed entries to display:
RSS_FEEDMAX=15

# The RSS generator must use a unique feed identifier.
# Generate one for your feed by using the string returned by "uuidgen -t":
RSS_UUID=""

# Either use gpg or gpg2:
GPGBIN="/usr/bin/gpg"

# Optionally use gpg-agent to cache the gpg passphrase instead of letting the
# script keep it in the environment (note that if you define USE_GPGAGENT=1
# but gpg-agent is not running, you will get prompted for a passphrase every
# single time gpg runs):
USE_GPGAGENT="0"

# Generate slack-requires, slack-suggests, and slack-conflicts lines in the
# metadata files by setting FOR_SLAPTGET to "1" -- these are used by slapt-get 
FOR_SLAPTGET="0"

# Follow symlinks in case the repository has symlinks like 14.0 -> 13.37
# indicating that one package works for those two Slackware releases.
# If the script does _not_ follow symlinks, then the symlinks will appear in
# the repository listing instead of the packages they point to.
FOLLOW_SYMLINKS="1"

# If the repository has separate package subdirectories then define them here.
# Separate FILELIST.TXT, MANIFEST etc.. files will be created for all of them.
REPO_SUBDIRS=""

# If you want to exclude certain directories or files from being included
# in the repository metadata, define them here (space-separated).
# Example: REPO_EXCLUDES="RCS logs .genreprc"
# .revision files are created by slackrepo:
REPO_EXCLUDES=".revision"

#-------------------------------------------------------------------------------
# Defaults for control arguments

QUIET='n'
VERBOSE='n'
VERY_VERBOSE='n'
MAKE_VERBOSE='n'
TEST='n'
DRY_RUN='n'
INSTALL='n'
PREREMOVE='y'
KEEP_TMP='n'

#-------------------------------------------------------------------------------
# Variables for creating the SlackBuild repository if it does not already exist

# URL of the remote git repo to be cloned:
INIT_GITCLONE='https://github.com/willysr/csb.git'

# Git branch to set up: %SLACKVER% implies '14.1' for Slackware 14.1, etc
INIT_GITBRANCH='master'
